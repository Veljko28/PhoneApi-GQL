type Query {
  getUser(id: String!): UserResponse
  getAllUsers: [User]
}

type Mutation {
  register(registerForm: RegisterForm!): Boolean
  login(info: UserInfo!): TokenResponse
  deleteUser(id: String): Boolean
  updateUser(user: updateUser): Boolean
}

type TokenResponse {
  accessToken: String
}

input RegisterForm {
  Id: String
  userName: String!
  email: String!
  password: String!
  confirm_password: String!
}

type UserResponse {
  UserName: String
  Email: String
  Description: String
  Rating: Int
  EmailConfirmed: Boolean
  PhoneNumber: String
  Phones_sold: Int
  LoyalityPoints: Int
}

input UserInfo {
  email: String!
  password: String!
}

input updateUser {
  Id: String!
  Email: String
  UserName: String!
  Description: String!
  Rating: Int!
  PhoneNumber: String
  Phones_sold: Int
  EmailConfirmed: Boolean!
  LoyalityPoints: Int
}

type User {
  Id: String!
  Email: String
  UserName: String!
  Password: String!
  Description: String!
  Rating: Int!
  PhoneNumber: String!
  Phones_sold: Int!
  EmailConfirmed: Boolean!
  LoyalityPoints: Int!
}
